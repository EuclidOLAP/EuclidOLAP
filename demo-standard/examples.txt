select
{
  [Date].[2020],
  [Date].[2021]
} on rows,
{
  [Measures].[Revenue], [Measures].[Cost]
} on columns
from [Airline A];

---

select
{
  Date.[ALL].[2020],
  Date.Root.[2021],
  Date.Calendar.[2022]
} on columns,
{
  [Measures].Revenue,
  [Measures].Cost
} on rows
from [Airline A];

---

select
{
  Date.Root.[2021],
  Date.Calendar.[2022]
} on columns,
{
  [Measures].Cost
} on rows
from [Airline A];

---

select
{
  Date.Calendar.[2022]
} on columns,
{
  [Measures].Cost
} on rows
from [Airline A];

---

select
{
  Date.Calendar.[2022].[Q1].M1,
  Date.Calendar.[2022].[Q1].M2,
  Date.Calendar.[2022].[Q1].M3
} on columns,
{
  [Measures].Revenue,
  [Measures].Cost
} on rows
from [Airline A]
where ([Classes of Service].[Economy Plus], [Aircraft Models].[Airbus].[A318]);

---

select
{
  [Date].[2020],
  [Date].[2021]
} on rows,
{
  [Measures].[Revenue], [Measures].[Cost]
} on columns
from [Airline B];

---

select
{
  Date.[ALL].[2020],
  Date.Root.[2021],
  Date.Calendar.[2022]
} on columns,
{
  [Measures].Revenue,
  [Measures].Cost
} on rows
from [Airline B];

---

select
{
  Date.Root.[2021],
  Date.Calendar.[2022]
} on columns,
{
  [Measures].Cost
} on rows
from [Airline B];

---

select
{
  Date.Calendar.[2022]
} on columns,
{
  [Measures].Cost
} on rows
from [Airline B];

---

select
{
  Date.Calendar.[2022].[Q1].M1,
  Date.Calendar.[2022].[Q1].M2,
  Date.Calendar.[2022].[Q1].M3
} on columns,
{
  [Measures].Revenue,
  [Measures].Cost
} on rows
from [Airline B]
where ([Classes of Service].[Economy Plus], [Aircraft Models].[Airbus].[A318]);

---

with
member [Measures].CUSMBR as IIf(IsEmpty([Measures].Revenue), 0, [Measures].Revenue)
select
Children([Date].[2022].[Q3]) on 1,
{
  [Measures].Revenue,
  [Measures].CUSMBR
} on 0
from [Airline A]
where
([Classes of Service].[Premium Business], [Aircraft Models].[Boeing].[Boeing 737]);

---

with
member [Measures].XXXxxx as "$$Name([Date])" // Name([Date])
select
{
  [Date].[All]
} on 1,
{
  [Measures].XXXxxx
} on 0
from [Airline A];

---

with
member [Measures].XXXxxx as Name([Date].[all])
select
{
  [Date].[All]
} on 1,
{
  [Measures].XXXxxx
} on 0
from [Airline A];

---

select
{ Date.Calendar.[2022].[Q1].M1, Date.Calendar.[2022].[Q1].M2, Date.Calendar.[2022].[Q1].M3 } on columns,
{ [Measures].Revenue, [Measures].Cost } on rows from [Airline A];

---

with member [Measures]._AR_ as LookupCube([Airline A], "([Measures].Cost, Date.[2022].[Q1].M1)")
select
{ Date.Calendar.[2022].[Q1].M1, Date.Calendar.[2022].[Q1].M2, Date.Calendar.[2022].[Q1].M3 } on columns,
{ [Measures].Revenue, [Measures]._AR_ } on rows from [Airline B];

---

with member [Measures]._AR_ as LookupCube("Airline A", ([Measures].Cost, Date.[2022].[Q1].M3))
select
{ Date.Calendar.[2022].[Q1].M1, Date.Calendar.[2022].[Q1].M2, Date.Calendar.[2022].[Q1].M3 } on columns,
{ [Measures].Revenue, [Measures]._AR_ } on rows from [Airline B];

---

with member [Measures]._AR_ as LookupCube("Airline A", ([Measures].Cost, Date.[2022].[Q1].M3) / 100)
select
{ Date.Calendar.[2022].[Q1].M1, Date.Calendar.[2022].[Q1].M2, Date.Calendar.[2022].[Q1].M3 } on columns,
{ [Measures].Revenue, [Measures]._AR_ } on rows from [Airline B];

---

with

// member [Measures].XXXXXX as "$$Name([Date])" // Name([Date])

member [Measures].XXXXXX as IIf([Measures].Cost > 500000000, "QQQ", IIf([Measures].Cost < 450000000, "LLL", [Measures].Cost))

select
Children([Date].[All]) on 1,
{
  [Measures].Cost,
  [Measures].XXXXXX
} on 0
from [Airline A];

---

with
// member [Measures].XXXXXX as "$$Name([Date])" // Name([Date])
member [Measures].XXXXXX as IIf([Measures].Cost > 500000000, "QQQ", IIf([Measures].Cost < 450000000, "LLL", lookupcube("Airline B", [Measures].Cost)))
select
Children([Date].[All]) on 1,
{
  [Measures].Cost,
  [Measures].XXXXXX
} on 0
from [Airline A];

---

select
[Measures].Cost on 1, [Measures].Cost on 99999
from [Airline B];

---

with
member [Measures].XXXxxx as name([Date].[all])
select
{
  [Measures].XXXxxx
} on 0,
{ Date.[2022].Q1 } on 1
from [Airline A];

---

with
member [Measures].XXXxxx as Date.Financial.Name
select
{
  [Measures].XXXxxx
} on 0,
{ Date.[2022].Q1 } on 1
from [Airline A];

---

with
member [Measures].XXXxxx as [Classes of Service].[Premium Economy Class].name()
select
{
  [Measures].XXXxxx
} on 0,
{ Date.[2022].Q1 } on 1
from [Airline A];

---

select
CrossJoin(Children(Date.Calendar.[ALL]), {[Measures].Revenue, [Measures].Cost}) on 0,
CrossJoin(Children([Classes of Service].[ALL]), Children([Aircraft Models].Root)) on 1
from [Airline B];

---

select
{ Date.[2020], Date.[2021], Date.[2022] } on columns,
{ [Measures].Revenue } on rows
from [Airline A];

---

select
{
  [Measures].Revenue
} on columns,
Children([Classes of Service].Root) on rows
from [Airline A];

---

select
  Children([Aircraft Models].[Boeing]) on rows,
  CrossJoin(Children(Date.Root), { [Measures].Cost }) on columns
from [Airline A];

---

with
member [Measures].proportion as ([Measures].Revenue) / ([Classes of Service].[Root], [Measures].Revenue)
select
{ Date.[2019], Date.[2020], Date.[2021], Date.[2022] } on columns,
members([Classes of Service], LEAF) on rows
from [Airline A]
where ([Measures].proportion, [Aircraft Models].[Airbus]);

---

select
children([Aircraft Models].[ALL]) on rows,
children([Date].[ALL]) on columns
from [Airline A]
where ([Measures].Revenue);

---

with
member [Measures].XXXxxx as [Date].[all].Name()
member [Measures].YYYyyy as [Date].[2022].Q3.Name
select
{
  [Date].[All]
} on 1,
{
  [Measures].XXXxxx, [Measures].YYYyyy
} on 0
from [Airline A];

---

select
[Aircraft Models].[ALL].children on rows,
[Date].[ALL].children() on columns
from [Airline A]
where ([Measures].Revenue);

---

with
member [Measures].proportion as ([Measures].Revenue) / ([Classes of Service].[Root], [Measures].Revenue)
select
{ Date.[2019], Date.[2020], Date.[2021], Date.[2022] } on columns,
members([Classes of Service]) on rows
from [Airline A]
where ([Measures].proportion, [Aircraft Models].[Airbus]);

---

with
member [Measures].proportion as ([Measures].Revenue) / ([Classes of Service].[Root], [Measures].Revenue)
select
{ Date.[2019], Date.[2020], Date.[2021], Date.[2022] } on columns,
[Classes of Service].members() on rows
from [Airline A]
where ([Measures].proportion, [Aircraft Models].[Airbus]);

---

with
member [Measures].proportion as ([Measures].Revenue) / ([Classes of Service].[Root], [Measures].Revenue)
select
{ Date.[2019], Date.[2020], Date.[2021], Date.[2022] } on columns,
[Classes of Service].MEMBERS on rows
from [Airline A]
where ([Measures].proportion, [Aircraft Models].[Airbus]);

---

select
lateralMembers
(Date.[2022].Q1.M1) on 100,
{ [Measures].Revenue } on rows
from [Airline A];

---

select 
order(members(Date.Calendar), ([Measures].[Cost]), DESC) on 10, 
{ ([Measures].[Cost]) } on 1 
from [Airline B] ;

---

select
[Measures].[Cost] on 0, 
order(members(Date), ([Measures].Revenue), basc) on 1 
from [Airline A] ;

---

select 
{ (Date.[Calendar].[ALL].[2021]) } on 0, 
topCount(
    crossjoin( // members([Measures]), 
    children([Classes of Service].root), 
    lateralMembers([Aircraft Models].[Boeing].[Boeing 737])), 
    10, 
    (Date.[Calendar].[ALL].[2021])
) on 1 
from [Airline B] ;

---

select 
{ (Date.[Calendar].[ALL].[2021]) } on 0, 
topCount(
    crossjoin(members([Measures]), 
    children([Classes of Service].root), 
    lateralMembers([Aircraft Models].[Boeing].[Boeing 737])), 
    10, 
    (Date.[Calendar].[ALL].[2021])
) on 1 
from [Airline B] ;

---

select 
{ (Date.[Calendar].[ALL].[2021]) } on 0, 
members([Measures]) on 1 
from [Airline B] ;

---

select 
{ (Date.[Calendar].[ALL].[2021]) } on 0, 
members([Measures]) on 1 
from [Airline A] ;

---

select 
except(members(Date), children(Date.[Root])) on 1, 
except(members( [Measures] ), {([Measures].Cost), ([Measures].Revenue)}) on 0 
from [Airline B] 
where ( [Aircraft Models].[Bombardier] );

---

select 
except(members(Date), children(Date.[Root])) on 1, 
except(members( [Measures] ), {([Measures].Cost), ([Measures].Revenue)}) on 0 
// except(members( [Measures] ), {([Measures].Revenue)}) on 0 
from [Airline B] 
where ( [Aircraft Models].[Bombardier] );

---

select 
except(members(Date), children(Date.[Root])) on 1, 
// except(members( [Measures] ), {([Measures].Cost), ([Measures].Revenue)}) on 0 
except(members( [Measures] ), {([Measures].Revenue)}) on 0 
from [Airline B] 
where ( [Aircraft Models].[Bombardier] );

---

with 
member [Measures].SSSSSS 
    as sum(Ytd(), ([Measures].[Cost])) 
select 
    { ([Measures].[Cost]), ([Measures].SSSSSS)} on 1, 
    YTD() on 10 
from [Airline B] 
where (Date.[ALL].[2021].Q4.M12);

---

with 
set SSSSSS 
    as filter(descendants(Date.Calendar.[ALL].[2021], 1, SELF_AND_AFTER), ([Measures].[Cost]) > 1) 
member [Measures].XXXXXX 
    as ([Measures].[Cost]) - 20000 
select 
    topPercent(SSSSSS, 25, ([Measures].[Cost])) on 10, 
    {([Measures].XXXXXX)} on 1 
from [Airline A] ;

---

with 
set SSSSSS 
    as filter(descendants(Date.Calendar.[ALL].[2021], 1, SELF_AND_AFTER), ([Measures].[Revenue]) > 1) 
member [Measures].XXXXXX 
    as ([Measures].[Revenue]) - 20000 
select 
    topPercent(SSSSSS, 25, ([Measures].[Revenue])) on 10, 
    {([Measures].XXXXXX)} on 1 
from [Airline B] ;

---

with 
set SSSSSS 
  as tail( crossjoin(LATERALMEMBERS([Starting Point].[ALL].[Europe]), LATERALMEMBERS([Measures].Cost)), 8 ) 
SELECT 
  SSSSSS On 10, 
  LATERALMEMBERS([Ending Point].[ALL]) On 1 
frOM [Airline B] ;

---

with 
set SSSSSS 
    as filter(descendants(Date.[ALL].[2021], 1, SELF_AND_AFTER), ([Measures].Revenue) > 1) 
member [Measures].XXXXXX 
    as ([Measures].Revenue) - 18000 
select 
    bottomPercent(SSSSSS, 53, ([Measures].[XXXXXX])) on 10, 
    {([Measures].[XXXXXX])} on 1 
from [Airline B] ;

---

with 
set SSSSSS 
    as filter(descendants(Date.Calendar.[ALL].[2021], 1, SELF_AND_AFTER), ([Measures].Cost) > 1) 
member [Measures].XXXXXX as 
    ([Measures].Cost) - 20000 
select 
    topPercent(SSSSSS, 55, ([Measures].Cost)) on 10, 
    {([Measures].Cost)} on 1 
from [Airline A] ;

---

select 
  members([Measures]) on 0, 
  intersect(members(Date.[Calendar]), UNION(children(Date.[ALL].[2021]), children(Date.[ALL].[2021].Q3))) on 1 
from [Airline B] ;

---

select 
    members([Measures]) on 0, 
    intersect(members(Date), UNION(children(Date.Calendar.[ALL].[2021]), children(Date.[ALL].[2021].Q1)), ALL) on 1 
from [Airline B] ;

---

select
{
    Date.[ALL].[2020],
    ( Parent(Date.[ALL].[2020].Q1) ),
    Date.[ALL].[2020].Q1,
    ( Parent(Date.[ALL].[2020].Q1.M3) )
} on 10,
{ [Measures].Revenue } on 1
from [Airline A];

---

select
Date.[ALL].[2020].Q1.Parent on 10,
{ [Measures].Revenue } on 1
from [Airline B];

---

select
Date.[ALL].[2020].Q1.Parent().Parent on 10,
{ [Measures].Revenue } on 1
from [Airline A];

---

with 
MEmber [Measures].XXX 
  as ([Measures].[Revenue]) / (paREnt(CurrentMember(Date)), [Measures].[Cost]) 
select 
  { ([Measures].[Cost]), ([Measures].XXX) } ON 0, 
  FIlter(members(Date), ([Measures].[Revenue]) > 350000000) on 1 
from [Airline A];

---

with 
member [Starting Point].PPPPPP 
  as ([Starting Point].Asia) + [Starting Point].[North America]
member [Measures].MMMMMM 
  as (paREnt([Starting Point].currentMember), [Measures].Cost) 
select
  { ([Measures].Cost), ([Measures].MMMMMM) } on 1,
  filter(members([Starting Point]), ([Measures].Cost) > 1) on 200 
from [Airline B] ;
// where ( [Goods].[ALL].[electronic product].[computer] , Transport.[ALL].railway, [starting region].[ALL].[Europe].[UK], [ending region].[ALL].[Europe].[Italy], [completion date].[ALL].[2020].[Q1].[M3] );

---

with 
member [Aircraft Models].XXX 
  as (paREnt([Measures].currentMember()), [Aircraft Models].[Boeing]) 
select 
  members([Measures]) on 1, 
  { ( [Aircraft Models].[ATR] ), ([Aircraft Models].XXX) } on 0 
from [Airline B] 
where ([Ending Point].[South America]);

---

with 
member [Date].PPPPPP 
  as ([Date].[2021].Q1.M2) + ([Date].[2021].Q1.M3) 
member [Measures].MMMMMM as 
  (prevMember(currentMember([Date])), [Measures].Cost) 
select 
  { ([Measures].Cost), ([Measures].MMMMMM) } on 1, 
  filter(members([Date]), ([Measures].Cost) > 600000) on 200 
from [Airline A] 
where ( [Classes of Service].[Premium Business], [Aircraft Models].[Boeing].[Boeing 737] );

---

with 
member Date.XXX as 
  (prevMember([Measures].currentMember()), [Date].[2021]) 
select 
  members([Measures]) on 1, 
  { ( [Date].[2021] ), ([Date].XXX) } on 0 
from [Airline B] 
where ( [Classes of Service].[Premium Business], [Aircraft Models].[Boeing].[Boeing 737], [Ending Point].[Europe], [Starting Point].[Europe] );

---

select 
members([Measures]) on 1, 
{ [Date].[ALL].[2020].FirstChild() } on 0 
from [Airline B];

---

select 
members([Measures]) on 1, 
[Date].[ALL].[2020].LastChild on 10 
from [Airline B];

---

select 
{ ( FirstSibling([Date].[2020]) ) } on 0,
{ ([Measures].Revenue), ([Measures].Cost) } on 100 
from [Airline A];

---

select 
{ [Date].[2020].FirstSibling() } on 0,
{ ([Measures].Revenue), ([Measures].Cost) } on 100 
from [Airline A];

---

select 
( [Date].[2020].FirstSibling() ) on 0,
{ ([Measures].Revenue), ([Measures].Cost) } on 100 
from [Airline B];

---

select 
{ ( LastSibling([Date].[2020]) ) } on 0,
{ ([Measures].Revenue), ([Measures].Cost) } on 100 
from [Airline A];

---

select 
//{ ( LastSibling([Date].[2020]) ) } on 0,
[Date].[2020].LastSibling on 0,
{ ([Measures].Revenue), ([Measures].Cost) } on 100 
from [Airline A];

---

select 
[Date].[2020].LastSibling() on 0,
{ ([Measures].Revenue), ([Measures].Cost) } on 100 
from [Airline B];

---

select
{ 
    [Classes of Service].[ALL].[Business Suite],
    ( Lag ([Classes of Service].[ALL].[Business Suite], 0) )
} on rows,
{
    [Aircraft Models].[ALL].Boeing.[Boeing 747], 
    [Aircraft Models].[ALL].Boeing.[Boeing 777], 
    [Aircraft Models].[ALL].Boeing.[Boeing 787]
} on columns
from [Airline A];

---

select
{ 
    [Classes of Service].[ALL].[Business Suite],
    [Classes of Service].[ALL].[Business Suite].Lag ( 0)
} on rows,
{
    [Aircraft Models].[ALL].Boeing.[Boeing 747], 
    [Aircraft Models].[ALL].Boeing.[Boeing 777], 
    [Aircraft Models].[ALL].Boeing.[Boeing 787]
} on columns
from [Airline A]

---

select
{ 
    [Classes of Service].[ALL].[Business Suite],
    ( Lag ([Classes of Service].[ALL].[Business Suite], -110) ),
    ( Lead([Classes of Service].[ALL].[Business Suite], - 110) )
} on rows,
{
    [Aircraft Models].[ALL].Boeing.[Boeing 747], 
    [Aircraft Models].[ALL].Boeing.[Boeing 777], 
    [Aircraft Models].[ALL].Boeing.[Boeing 787]
} on columns
from [Airline B];

---

select
{ 
    [Classes of Service].[ALL].[Business Suite],
    [Classes of Service].[ALL].[Business Suite].Lag ( -110),
    ( [Classes of Service].[ALL].[Business Suite].Lead( - 110) )
} on rows,
{
    [Aircraft Models].[ALL].Boeing.[Boeing 747], 
    [Aircraft Models].[ALL].Boeing.[Boeing 777], 
    [Aircraft Models].[ALL].Boeing.[Boeing 787]
} on columns
from [Airline B];

---

with 
member [Measures].AAAaaa 
  as ([Measures].[Revenue], parallelPeriod(Date.Calendar.Month, 0 - 3)) 
member [Measures].SSS 
  as ([Measures].[Cost], parallelPeriod(Date.Month, 0)) 
member [Measures].DDD 
  as ([Measures].[Cost], parallelPeriod(Date.Calendar.[Month], 0 - 5)) 
select 
  { (Date.[ALL].[2021].[Q3].M7) } on 0, 
  {([Measures].AAAaaa),([Measures].SSS),([Measures].DDD)} on 1 
from [Airline B] ;

---

select 
{ (ClosingPeriod(
    Date.Calendar.Quarter,
    Date.[ALL].[2021]
)) } on 10,
{ ([Measures].[Revenue]) } on SECTIONS
from [Airline B] ;

---

select 
{ 
    ([Starting Point].[North America], [Ending Point].[Europe], [Aircraft Models].[Airbus].[A320]), 
    ([Ending Point].[Europe], [Classes of Service].[First Class Suite]) 
} on 0, 
{ 
    (OpeningPeriod([Date].[Month])) 
} on 2 
from [Airline B];

---

select
{
  [Measures].Revenue,
  [Measures].Revenue.NextMember,
  [Measures].Cost
} on columns,
{
    Date.[2021].Q4.NextMember(),
    Date.[2022].Q1
} on rows
from [Airline A];

---

select
{
  [Measures].Revenue,
  [Measures].Revenue.NextMember,
  [Measures].Cost
} on columns,
{
    Date.[2021].Q4.NextMember(),
    Date.[2022].Q1,
    Date.Calendar.[all],
    nextmember(Date.Calendar.rOOt)
} on rows
from [Airline A];

---

select
Distinct(
{
  [Measures].Revenue,
  [Measures].Revenue.NextMember,
  [Measures].Cost
}) on columns,
Distinct({
    Date.[2021].Q4.NextMember(),
    Date.[2022].Q1,
    Date.Calendar.[all],
    nextmember(Date.Calendar.rOOt)
}) on rows
from [Airline A];

---

select 
except(members(Date), children(Date.[Root])) on 1, 
except(members( [Measures] ), {([Measures].Revenue)}) on 0 
from [Airline B] 
where ( [Aircraft Models].[Bombardier] );

---

with
member [Measures].[AAaaAA] as // 123
    avg(except(members(Date), children(Date.[Root])), [Measures].Cost)
    // avg(except(members(Date), children(Date.[Root])))
select
[Measures].[AAaaAA] on 0,
[Aircraft Models].[Bombardier] on 1
from [Airline B] ;

---

with
member [Measures].[AAaaAA] as
    avg(except(members(Date), children(Date.[Root])), [Measures].Cost, INCLUDEEMPTY)
select
[Measures].[AAaaAA] on 0,
[Aircraft Models].[Bombardier] on 1
from [Airline B] ;

---

select 
    members([Measures]) on 0, 
    intersect(members(Date), UNION(children(Date.Calendar.[ALL].[2021]), children(Date.[ALL].[2021].Q1)), ALL) on 1 
from [Airline B] ;

---

with

member [Measures].MMax as 
    max(intersect(members(Date), UNION(children(Date.Calendar.[ALL].[2021]), children(Date.[ALL].[2021].Q1)), ALL), [Measures].Revenue)
member [Measures].MMin as 
    min(intersect(members(Date), UNION(children(Date.Calendar.[ALL].[2021]), children(Date.[ALL].[2021].Q1)), ALL), [Measures].Revenue)
select 
    { [Measures].MMax, [Measures].MMin } on 0, 
    [Aircraft Models].Root on 1 
from [Airline B] ;

---

with 
member [Measures].EEEEEE
  as Date.currentMember.name
member [Measures].QQQQQQ
  as Aggregate(Date.members, [Measures].EEEEEE, DistinctCount)
select 
  [Measures].EEEEEE on 1,
  Date.members on 10 
from [Airline B] 
where ([Ending Point].[South America]);

---

with 
member [Measures].EEEEEE
  as Date.currentMember.name
member [Measures].QQQQQQ
  as Aggregate(Date.members, [Measures].EEEEEE, DistinctCount)
select 
  [Measures].QQQQQQ on 1,
  [Ending Point].[South America] on 10 
from [Airline B] 
where ([Ending Point].[South America]);

---

with 
member [Measures].EEEEEE
  as Date.currentMember.name
member [Measures].QQQQQQ
  as Aggregate(Date.[2022].children, [Measures].EEEEEE, DistinctCount)
select 
  [Measures].QQQQQQ on 1,
  [Ending Point].[South America] on 10 
from [Airline B] 
where ([Ending Point].[South America]);

---

with
member Date.AAA as 123
member Date.SSS as 222333
member Date.DDD as 777777777
select
union (
     Date.Quarter.members,
    {Date.AAA, Date.SSS, Date.DDD, Date.AAA}   
 ) on 1,
[Measures].members on 0
from [Airline A]

---

with
set SSSSSSSSS as 
    union (
        Date.Quarter.members,
        {Date.AAA, Date.SSS, Date.DDD, Date.AAA}
    )
member Date.AAA as 123
member Date.SSS as 222333
member Date.DDD as 777777777
member [Measures].XXXXXXXXX as Median(
    SSSSSSSSS,
    [Measures].Cost
)
select
[Aircraft Models].Root on 1,
[Measures].XXXXXXXXX on 0
from [Airline A]

---

with
set SSSSSSSSS as 
    union (
        Date.Quarter.members,
        {Date.AAA, Date.SSS, Date.DDD}   
    )
member Date.AAA as 123
member Date.SSS as 222333
member Date.DDD as 777777777
member [Measures].XXXXXXXXX as Median(
    SSSSSSSSS,
    [Measures].Cost
)
select
[Aircraft Models].Root on 1,
[Measures].XXXXXXXXX on 0
from [Airline A]

---

with
member Date.AAA as 123
member Date.SSS as 222333
member Date.DDD as 777777777
select
{Date.AAA, Date.SSS, Date.DDD, Date.AAA} on 1,
[Measures].members on 0
from [Airline A]

---

with
set SSSSSSSSS as 
    union (
        Date.Quarter.members,
        {Date.AAA, Date.SSS, Date.DDD}
    )
member Date.AAA as 123
member Date.SSS as 222333
member Date.DDD as 777777777
member [Measures].XXXXXXXXX as Median(
    {Date.AAA, Date.SSS, Date.DDD, Date.AAA},
    [Measures].Cost
)
select
[Aircraft Models].Root on 1,
[Measures].XXXXXXXXX on 0
from [Airline A]

---

select
[Measures].Revenue on 0,
crossjoin(Date.[all].children(), children([Aircraft Models].[Airbus])) on 1
from [Airline B]
where ([Classes of Service].[Economy Plus]);

---

with
member [Measures].aaasss as
    rank(
        (Date.root.[2021], [Aircraft Models].[Airbus].[A340]),
        crossjoin(Date.[all].children(), children([Aircraft Models].[Airbus]))
    )
select
[Measures].aaasss on 0,
[Classes of Service].[Economy Plus] on 1
from [Airline B];

---

with
member [Measures].aaasss as
    rank(
        (Date.root.[2021], [Aircraft Models].[Airbus].[A340]),
        {
            (Date.root.[2021], [Aircraft Models].[Airbus].[A380]),
            (Date.root.[2021], [Aircraft Models].[Airbus].[A340])
        }
    )
select
[Measures].aaasss on 0,
[Classes of Service].[Economy Plus] on 1
from [Airline B];

---

select
[Measures].Revenue on 0,
order(
    crossjoin(Date.[all].children(), children([Aircraft Models].[Airbus])),
    [Measures].Revenue
) on 1
from [Airline B]
where ([Classes of Service].[Economy Plus]);

---

with
member [Measures].aaasss as
    rank(
        (Date.root.[2021], [Aircraft Models].[Airbus].[A340]),
        crossjoin(Date.[all].children(), children([Aircraft Models].[Airbus])),
        [Measures].Revenue
    )
select
[Measures].aaasss on 0,
[Classes of Service].[Economy Plus] on 1
from [Airline B];

---

with
member [Measures].aaasss as
    rank(
        (Date.root.[2020], [Aircraft Models].[Airbus].[A320]),
        crossjoin(Date.[all].children(), children([Aircraft Models].[Airbus])),
        [Measures].Revenue
    )
select
[Measures].aaasss on 0,
[Classes of Service].[Economy Plus] on 1
from [Airline B];

---

with 
member [Measures].PPPPPP 
  as abs([Measures].MMMMMM) // ([Date].[2021].Q1.M2) + ([Date].[2021].Q1.M3) 
member [Measures].MMMMMM as [Measures].Cost - 750000
//  (prevMember(currentMember([Date])), [Measures].Cost) 
select 
  { ([Measures].Cost), ([Measures].MMMMMM), [Measures].PPPPPP  } on 1, 
  filter(members([Date]), ([Measures].Cost) > 600000) on 200 
from [Airline A] 
where ( [Classes of Service].[Premium Business], [Aircraft Models].[Boeing].[Boeing 737] );

---

select 
children([Date].[2022]) on rows, 
{ [Measures].Cost } on columns 
from [Airline A]

---

select 
DrilldownLevel(
	{
		[Date].[2022].[Q1],
		[Date].[2022]
	},
	[Date].[Year]
	) on rows, 
{ [Measures].Cost } on columns 
from [Airline A]

---

select 
[Date].[2022].[Q1].Children() on rows, 
{ [Measures].Cost } on columns 
from [Airline B]

---

select 
DrilldownLevel(
    crossjoin(
        [Aircraft Models].root,
        { [Date].[2022].[Q1], [Date].[2022] }
    ), 1
) on rows, 
{ [Measures].Cost } on columns 
from [Airline B]

---

select 
DrilldownLevel(
    crossjoin(
        [Aircraft Models].root,
        { [Date].[2022].[Q1], [Date].[2022] }
    )
) on rows, 
{ [Measures].Cost } on columns 
from [Airline B]

---

select 
DrilldownLevelBottom(
   crossjoin( { [Date].[2022].Q1, [Date].[2022] } , { [Starting Point].[Asia] } ), 2
) on rows, 
{ [Ending Point].[Asia] } on columns 
from [Airline B]
where ([Classes of Service].[Business Suite], [Aircraft Models].[Boeing].[Boeing 787])

---

select 
DrilldownLevelBottom(
   crossjoin( { [Date].[2022].Q4, [Date].[2022] } , { [Starting Point].[Asia] } ), 2, [Measures].Cost
) on rows, 
{ [Ending Point].[Asia] } on columns 
from [Airline B]
where ([Classes of Service].[Business Suite], [Aircraft Models].[Boeing].[Boeing 787])

---

select 
DrilldownLevelBottom(
   crossjoin( { [Date].[2022].Q1, [Date].[2022] } , { [Starting Point].[Asia] } ), 2
) on rows, 
{ [Ending Point].[Asia] } on columns 
from [Airline B]
where ([Classes of Service].[Business Suite], [Aircraft Models].[Boeing].[Boeing 787])

---

select
Date.[2022].children on 1,
[Measures].members on 0
from [Airline B]
where ([Classes of Service].[Business Suite], [Aircraft Models].[Boeing].[Boeing 787], [Starting Point].[Asia]);

---

select
DrilldownLevelBottom(
    crossjoin({ Date.[2022].Q1, Date.[2022] }, [Starting Point].[Asia] )
    , 2
) on rows, 
[Measures].members on 0
from [Airline B]
where ([Classes of Service].[Business Suite], [Aircraft Models].[Boeing].[Boeing 787]);

---

select
DrilldownLevelBottom(
    crossjoin( { [Aircraft Models].[Boeing], [Aircraft Models].[Airbus] }, [Starting Point].[Asia] )
    , 3
    , [Measures].Cost
) on rows, 
[Classes of Service].[Business Suite] on 0
from [Airline B]
where ( [Measures].Cost, [Aircraft Models].[Boeing].[Boeing 787], [Ending Point].[Asia]);

---

select
DrilldownLevelBottom(
    crossjoin( [Starting Point].[Asia], { [Aircraft Models].[Boeing], [Aircraft Models].[Airbus] } )
    , 3
    , [Aircraft Models].[Aircraft Models].Manufacturer
    , [Measures].Revenue
) on rows, 
[Classes of Service].[Business Suite] on 0
from [Airline B]
where ( [Measures].Revenue, [Aircraft Models].[Boeing].[Boeing 787], [Ending Point].[Asia]);

---

select
DrilldownLevelBottom(
    crossjoin( [Starting Point].[Asia], { [Aircraft Models].[Boeing], [Aircraft Models].[Airbus] } )
    , 3
    , [Aircraft Models].[Aircraft Models].Manufacturer
) on rows, 
[Classes of Service].[Business Suite] on 0
from [Airline B]
where ( [Measures].Revenue, [Aircraft Models].[Boeing].[Boeing 787], [Ending Point].[Asia]);

---

select
DrilldownLevelTop(
    crossjoin({ Date.[2022].Q1, Date.[2022] }, [Starting Point].[Asia] )
    , 2
) on rows, 
[Measures].members on 0
from [Airline B]
where ([Classes of Service].[Business Suite], [Aircraft Models].[Boeing].[Boeing 787]);

---

select
DrilldownLevelTop(
    crossjoin( { [Aircraft Models].[Boeing], [Aircraft Models].[Airbus] }, [Starting Point].[Asia] )
    , 3
    , [Measures].Cost
) on rows, 
[Classes of Service].[Business Suite] on 0
from [Airline B]
where ( [Measures].Cost, [Aircraft Models].[Boeing].[Boeing 787], [Ending Point].[Asia]);

---

select
DrilldownLevelTop(
    crossjoin( [Starting Point].[Asia], { [Aircraft Models].[Boeing], [Aircraft Models].[Airbus] } )
    , 3
    , [Aircraft Models].[Aircraft Models].Manufacturer
    , [Measures].Revenue
) on rows, 
[Classes of Service].[Business Suite] on 0
from [Airline B]
where ( [Measures].Revenue, [Aircraft Models].[Boeing].[Boeing 787], [Ending Point].[Asia]);

---

select
DrilldownLevelTop(
    crossjoin( [Starting Point].[Asia], { [Aircraft Models].[Boeing], [Aircraft Models].[Airbus] } )
    , 3
    , [Aircraft Models].[Aircraft Models].Manufacturer
) on rows, 
[Classes of Service].[Business Suite] on 0
from [Airline B]
where ( [Measures].Revenue, [Aircraft Models].[Boeing].[Boeing 787], [Ending Point].[Asia]);

---

select 
DrilldownMember(
    Date.root.children,
    { [Date].[2021] }
) on rows, { [Aircraft Models].Boeing } on columns
 from [Airline A];

---

select 
DrilldownMember(
    Date.root.children,
    { [Date].[2021], [Date].[2021].Q3, [Date].[2021].Q1, [Date].[2022].Q1 },
    recursive
) on rows, { [Aircraft Models].Boeing } on columns
 from [Airline B];

---

with
member [Measures].[################ finished ################] as 660880
member [Measures].[##########################################] as 660880
select
{ (Date.[ALL]) } on 0,
{
    ([Measures].[##########################################]),
    ([Measures].[################ finished ################]),
    ([Measures].[##########################################])
} on SECTIons
from [Airline B];